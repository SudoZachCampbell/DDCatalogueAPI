// <auto-generated />
using DDCatalogue.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DDCatalogue.Migrations
{
    [DbContext(typeof(DDContext))]
    [Migration("20200415170850_Adding More Tables")]
    partial class AddingMoreTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DDCatalogue.Model.Character", b =>
                {
                    b.Property<int>("CharacterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CharacterId");

                    b.ToTable("Characters");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Character");
                });

            modelBuilder.Entity("DDCatalogue.Model.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemId");

                    b.ToTable("Items");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Item");
                });

            modelBuilder.Entity("DDCatalogue.Model.Municipality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Municipalities");
                });

            modelBuilder.Entity("DDCatalogue.Model.Monster", b =>
                {
                    b.HasBaseType("DDCatalogue.Model.Character");

                    b.HasDiscriminator().HasValue("Monster");
                });

            modelBuilder.Entity("DDCatalogue.Model.Npc", b =>
                {
                    b.HasBaseType("DDCatalogue.Model.Character");

                    b.HasDiscriminator().HasValue("Npc");
                });

            modelBuilder.Entity("DDCatalogue.Model.Player", b =>
                {
                    b.HasBaseType("DDCatalogue.Model.Character");

                    b.Property<string>("PlayerName")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Player");
                });

            modelBuilder.Entity("DDCatalogue.Model.Armour", b =>
                {
                    b.HasBaseType("DDCatalogue.Model.Item");

                    b.HasDiscriminator().HasValue("Armour");
                });

            modelBuilder.Entity("DDCatalogue.Model.Treasure", b =>
                {
                    b.HasBaseType("DDCatalogue.Model.Item");

                    b.HasDiscriminator().HasValue("Treasure");
                });

            modelBuilder.Entity("DDCatalogue.Model.Weapon", b =>
                {
                    b.HasBaseType("DDCatalogue.Model.Item");

                    b.HasDiscriminator().HasValue("Weapon");
                });
#pragma warning restore 612, 618
        }
    }
}
